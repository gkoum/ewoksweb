// the graphs we will get from the server or DB
// decoupling from the Graph visualisation library used means we have a model
// of ewoks and a map-engine to create a model for react-flow or another for vis etc.
import type { Task } from '../types';

const PpfPortTask = 'ewokscore.ppftasks.PpfPortTask';
export const graph = {};

// TODO: put tasks on the server: get, put, post, delete
export const tasks: Task[] = [
  {
    task_type: 'class',
    task_identifier:
      'tomwer.core.process.reconstruction.nabu.nabuvolume.NabuVolume',
    required_input_names: ['henris'],
    optional_input_names: [],
    output_names: ['data', 'out-val1', 'out-val2'],
    category: 'ewokscore',
  },
  {
    task_type: 'class',
    task_identifier: '_VolumeViewerPlaceHolder',
    required_input_names: ['henris'],
    optional_input_names: [],
    output_names: ['data', 'out-val1', 'out-val2'],
    category: 'ewokscore',
  },
  {
    task_type: 'class',
    task_identifier: 'MethodExecutorTask',
    required_input_names: ['method'],
    optional_input_names: [],
    output_names: ['return_value'],
    category: 'ewokscore',
  },
  {
    task_type: 'class',
    task_identifier: 'ScriptExecutorTask',
    required_input_names: ['script'],
    optional_input_names: [],
    output_names: ['returncode'],
    category: 'ewokscore',
  },
  {
    task_type: 'class',
    task_identifier: 'PpfMethodExecutorTask',
    required_input_names: ['method'],
    optional_input_names: ['ppfdict'],
    output_names: ['ppfdict'],
    category: 'ewokscore',
  },
  {
    task_type: 'class',
    task_identifier: 'PpfPortTask',
    required_input_names: [],
    optional_input_names: ['ppfport', 'ppfdict'],
    output_names: ['ppfdict'],
    category: 'ewokscore',
  },
  {
    task_type: 'class',
    task_identifier: 'darfix.core.process.DataSelection',
    required_input_names: ['filenames'],
    optional_input_names: [
      'in_memory',
      'copy_files',
      'dark_filename',
      'root_dir',
    ],
    output_names: ['dataset'],
    category: 'darfix',
  },
  {
    task_type: 'class',
    task_identifier: 'DataCopy',
    required_input_names: ['dataset'],
    optional_input_names: [],
    output_names: ['dataset'],
    category: 'darfix',
  },
  {
    task_type: 'class',
    task_identifier: 'DataPassThrough',
    required_input_names: ['dataset'],
    optional_input_names: [],
    output_names: ['dataset'],
    category: 'darfix',
  },
  {
    task_type: 'class',
    task_identifier: 'NoiseRemoval',
    required_input_names: ['dataset'],
    optional_input_names: [
      'method',
      'kernel_size',
      'background_type',
      'chunks',
      'step',
    ],
    output_names: ['dataset'],
    category: 'darfix',
  },
  {
    task_type: 'class',
    task_identifier: 'RoiSelection',
    required_input_names: ['roi_size', 'dataset', 'roi_origin'],
    optional_input_names: [],
    output_names: ['dataset'],
    category: 'darfix',
  },
  {
    task_type: 'class',
    task_identifier: 'DataPartition',
    required_input_names: ['dataset'],
    optional_input_names: ['bins', 'n_bins'],
    output_names: ['dataset'],
    category: 'darfix',
  },
  {
    task_type: 'class',
    task_identifier: 'DimensionDefinition',
    required_input_names: ['dataset', '_dims'],
    optional_input_names: [],
    output_names: ['dataset'],
    category: 'darfix',
  },
  {
    task_type: 'class',
    task_identifier: 'ShiftCorrection',
    required_input_names: ['dataset'],
    optional_input_names: ['shift'],
    output_names: ['dataset'],
    category: 'darfix',
  },
  {
    task_type: 'class',
    task_identifier: 'BlindSourceSeparation',
    required_input_names: ['dataset', 'method'],
    optional_input_names: ['n_comp'],
    output_names: ['dataset'],
    category: 'darfix',
  },
  {
    task_type: 'class',
    task_identifier: 'RockingCurves',
    required_input_names: ['dataset'],
    optional_input_names: [],
    output_names: ['dataset'],
    category: 'darfix',
  },
  {
    task_type: 'class',
    task_identifier: 'GrainPlot',
    required_input_names: ['dataset'],
    optional_input_names: [],
    output_names: ['dataset'],
    category: 'darfix',
  },
  {
    task_type: 'class',
    task_identifier: 'Transformation',
    required_input_names: ['dataset'],
    optional_input_names: [],
    output_names: ['dataset'],
    category: 'darfix',
  },
  {
    task_type: 'class',
    task_identifier: 'ZSum',
    required_input_names: ['dataset'],
    optional_input_names: ['plot'],
    output_names: ['dataset'],
    category: 'darfix',
  },
  {
    optional_input_names: [],
    output_names: [],
    required_input_names: [],
    task_identifier: 'Start-End',
    task_type: 'graphInput',
    uiProps: { icon: 'graphInput' },
  },
  {
    optional_input_names: [],
    output_names: [],
    required_input_names: [],
    task_identifier: 'Start-End',
    task_type: 'graphOutput',
    uiProps: { icon: 'graphOutput' },
  },
  {
    optional_input_names: [],
    output_names: ['return_value'],
    required_input_names: ['method'],
    task_identifier: 'ewokscore.methodtask.MethodExecutorTask',
    task_type: 'class',
    uiProps: { icon: 'orange1' },
  },
  {
    optional_input_names: [],
    output_names: ['returncode'],
    required_input_names: ['script'],
    task_identifier: 'ewokscore.scripttask.ScriptExecutorTask',
    task_type: 'class',
  },
  {
    optional_input_names: ['ppfdict'],
    output_names: ['ppfdict'],
    required_input_names: ['method'],
    task_identifier: 'ewokscore.ppftasks.PpfMethodExecutorTask',
    task_type: 'class',
  },
  {
    optional_input_names: ['ppfport', 'ppfdict'],
    output_names: ['ppfdict'],
    required_input_names: [],
    task_identifier: PpfPortTask,
    task_type: 'class',
  },
  {
    optional_input_names: ['b'],
    output_names: ['result'],
    required_input_names: ['a'],
    task_identifier: 'ewokscore.tests.examples.tasks.sumtask.SumTask',
    task_type: 'class',
  },
  {
    optional_input_names: ['b'],
    output_names: ['result'],
    required_input_names: ['a'],
    task_identifier: 'subsubgraph1',
    task_type: 'class',
  },
  {
    optional_input_names: ['b'],
    output_names: ['result'],
    required_input_names: ['a'],
    task_identifier: 'subgraph1',
    task_type: 'class',
  },
  {
    optional_input_names: ['b'],
    output_names: ['result'],
    required_input_names: ['a'],
    task_identifier: 'CommonPrepareExperiment.json',
    task_type: 'graph',
  },
  {
    optional_input_names: ['b'],
    output_names: ['result'],
    required_input_names: ['a'],
    task_identifier: 'mx.src.prepareTroubleShooting.run',
    task_type: 'class',
  },
  {
    optional_input_names: ['b'],
    output_names: ['result'],
    required_input_names: ['a'],
    task_identifier: 'mx.src.checkMoveOfPhi.run',
    task_type: 'class',
  },
  {
    optional_input_names: ['b'],
    output_names: ['result'],
    required_input_names: ['a'],
    task_identifier: 'mx.src.ispyb_set_status_success_with_errors.run',
    task_type: 'class',
  },
  {
    optional_input_names: ['b'],
    output_names: ['result'],
    required_input_names: ['a'],
    task_identifier: 'mx.src.troubleShootingAllTestsOk.run',
    task_type: 'class',
  },
  {
    optional_input_names: ['b'],
    output_names: ['result'],
    required_input_names: ['a'],
    task_identifier: 'mx.src.ispyb_set_status_success.run',
    task_type: 'class',
  },
];

// [
//   {
//     task_identifier: 'taskSkeleton',
//     task_type: 'ppfmethod',
//     icon: 'orange1',
//     category: 'ewokscore',
//     optional_input_names: ['b1'],
//     output_names: ['result1'],
//     required_input_names: ['a1'],
//   },
//   {
//     task_identifier: 'ewokscore.methodtask.MethodExecutorTask',
//     task_type: 'class',
//     icon: 'orange1',
//     category: 'ewokscore',
//     optional_input_names: ['b2'],
//     output_names: ['result2'],
//     required_input_names: ['a2'],
//   },
//   {
//     task_identifier: 'ewokscore.scripttask.ScriptExecutorTask',
//     task_type: 'class',
//     icon: 'orange2',
//     category: 'ewokscore',
//     optional_input_names: ['b3'],
//     output_names: ['result3'],
//     required_input_names: ['a3'],
//   },
//   {
//     task_identifier: 'ewokscore.ppftasks.PpfMethodExecutorTask',
//     task_type: 'class',
//     icon: 'orange3',
//     category: 'ewokscore',
//     optional_input_names: ['b4'],
//     output_names: ['result4'],
//     required_input_names: ['a4'],
//   },
//   {
//     task_identifier: 'ewokscore.ppftasks.PpfPortTask',
//     task_type: 'method',
//     icon: 'AggregateColumns',
//     category: 'ewokscore',
//     optional_input_names: ['b5'],
//     output_names: ['result5'],
//     required_input_names: ['a5'],
//   },
//   {
//     task_identifier: 'ewokscore.ppftasks.PpfPortTask',
//     task_type: 'ppfmethod',
//     icon: 'Continuize',
//     category: 'ewokscore',
//     optional_input_names: ['b6'],
//     output_names: ['result6'],
//     required_input_names: ['a6'],
//   },
//   {
//     task_identifier: 'ewokscore.tests.examples.tasks.sumtask.SumTask',
//     task_type: 'ppfmethod',
//     icon: 'CreateClass',
//     category: 'ewokscore',
//     optional_input_names: ['b7'],
//     output_names: ['result7'],
//     required_input_names: ['a7'],
//   },
//   {
//     task_identifier: 'graphInput',
//     task_type: 'graphInput',
//     icon: 'graphInput',
//     category: 'ewokscore',
//     optional_input_names: ['b8'],
//     output_names: ['result8'],
//     required_input_names: ['a8'],
//   },
//   {
//     task_identifier: 'graphOutput',
//     task_type: 'graphOutput',
//     icon: 'graphOutput',
//     category: 'ewokscore',
//     optional_input_names: ['b9'],
//     output_names: ['result9'],
//     required_input_names: ['a9'],
//   },
// ]
